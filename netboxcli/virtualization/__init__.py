from netboxcli.core import Core

from .cluster_groups import ClusterGroups
from .cluster_types import ClusterTypes
from .clusters import Clusters
from .interfaces import Interfaces
from .virtual_machines import VirtualMachines


class Virtualization:
    """
    Class for managing virtualization-related resources.

    Args:
        netbox: (Core) The Netbox object generated by the Client class.

    Attributes:
        virtual_machines (VirtualMachines): The virtual_machines object.
        interfaces (Interfaces): The interfaces object.
        clusters (Clusters): The clusters object.
        cluster_types (ClusterTypes): The cluster_types object.
        cluster_groups (ClusterGroups): The cluster_groups object.
    """

    def __init__(self, netbox: Core):

        self.virtual_machines = VirtualMachines(
            Core(netbox, '/api/virtualization/virtual-machines/')
        )
        self.interfaces = Interfaces(
            Core(netbox, '/api/virtualization/interfaces/')
        )
        self.clusters = Clusters(Core(netbox, '/api/virtualization/clusters/'))
        self.cluster_types = ClusterTypes(
            Core(netbox, '/api/virtualization/cluster-types/')
        )
        self.cluster_groups = ClusterGroups(
            Core(netbox, '/api/virtualization/cluster-groups/')
        )


__all__ = ['Virtualization']
